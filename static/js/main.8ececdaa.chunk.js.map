{"version":3,"sources":["components/Tile.js","components/Layer.js","components/SpecialPositionTile.js","components/Board.js","components/StatusBar.js","components/AboutModal.js","components/SettingsModal.js","components/Mahjong.js","components/IntroModal.js","serviceWorker.js","index.js"],"names":["Tile","props","state","classes","id","tile","this","graphics","layer","row","index","className","data-layer","data-row","data-index","data-tile","onClick","clicker","React","Component","Layer","tiles","rowName","i","length","push","key","layerNumber","row1","addTilesToRow","layerItems","row2","row3","row4","row5","row6","row7","row8","specialPosition","Board","SpecialPositionTile","board","layer5","left","layer1","right1","right2","layer2","layer3","layer4","top","StatusBar","minutes","Math","floor","time","minutes1","minutes2","hours","hours2","seconds1","seconds2","title","data-modalid","openModal","href","target","rel","matches","showAvailable","hint","shuffler","AboutModal","closeButton","stopPropagation","enableBackground","height","version","viewBox","width","xmlSpace","xmlns","xmlnsXlink","d","SettingsModal","type","name","value","htmlFor","defaultChecked","setSettings","tileTypes","tileset","Mahjong","matchesElements","remainingShuffles","hintTimer","secondsElapsed","settings","audio","acceptCookies","initialShuffle","bind","distributeTiles","createRow","handleClick","checkMatch","setEmpty","setSelection","clearSelection","clearHint","toggleShowAvailable","getAvailableTiles","checkTileAvailability","shuffleTiles","getHint","closeModal","closeSettings","stopPropagationFunction","accessCookie","newTileset","shuffledTileset","randomTile","splice","random","setState","rowLength","emptyLength","unshift","event","currentSelection","dataset","newState","classList","add","document","getElementById","querySelectorAll","forEach","remove","currentTiles","availableTiles","availableTilesElements","numMatches","v","layerAbove","parseInt","split","setAttribute","tilesArray","style","modalid","getElementsByName","checked","preventDefault","cookieName","cookieNameEq","cookiesArray","cookie","tempCookie","trim","indexOf","substring","interval","setInterval","tick","bgClasses","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ececdaa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Tile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let classes = \"\";\r\n        let id = \"\";\r\n        let tile = \"\";\r\n        \r\n        if (this.props.tile === \"empty\") {\r\n            classes = \"empty\";\r\n        // } else if (this.props.tile === \"flower1\" | this.props.tile === \"flower2\" | this.props.tile === \"flower3\" | this.props.tile === \"flower4\") {\r\n        //     classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile;\r\n        //     id = this.props.layer + this.props.row + this.props.index;\r\n        //     tile = \"flower\";\r\n        // } else if (this.props.tile === \"season1\" | this.props.tile === \"season2\" | this.props.tile === \"season3\" | this.props.tile === \"season4\") {\r\n        //     classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile;\r\n        //     id = this.props.layer + this.props.row + this.props.index;\r\n        //     tile = \"season\";\r\n        } else {\r\n            classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile;\r\n            id = this.props.layer + this.props.row + this.props.index;\r\n            tile = this.props.tile;\r\n        }\r\n\r\n        return (\r\n            <div id={id} className={classes} data-layer={this.props.layer} data-row={this.props.row} data-index={this.props.index} data-tile={tile} onClick={this.props.clicker}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tile;","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nclass Layer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    addTilesToRow(tiles, rowName) {\r\n        let row = [];\r\n        for (let i = 0; i < tiles.length; i++) {\r\n            row.push(<Tile key={i} tile={tiles[i]} layer={this.props.layerNumber} row={rowName} index={i} clicker={this.props.clicker} graphics={this.props.graphics} />);\r\n        }\r\n        return row;\r\n    } \r\n\r\n    render() {\r\n\r\n        let classes = \"layer \" + this.props.layerNumber;\r\n\r\n        let row1 = this.addTilesToRow(this.props.layerItems.row1, \"row1\");\r\n        let row2 = this.addTilesToRow(this.props.layerItems.row2, \"row2\");\r\n        let row3 = this.addTilesToRow(this.props.layerItems.row3, \"row3\");\r\n        let row4 = this.addTilesToRow(this.props.layerItems.row4, \"row4\");\r\n        let row5 = this.addTilesToRow(this.props.layerItems.row5, \"row5\");\r\n        let row6 = this.addTilesToRow(this.props.layerItems.row6, \"row6\");\r\n        let row7 = this.addTilesToRow(this.props.layerItems.row7, \"row7\");\r\n        let row8 = this.addTilesToRow(this.props.layerItems.row8, \"row8\");\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <div className=\"row\">{row1}</div>\r\n                <div className=\"row\">{row2}</div>\r\n                <div className=\"row\">{row3}</div>\r\n                <div className=\"row\">{row4}</div>\r\n                <div className=\"row\">{row5}</div>\r\n                <div className=\"row\">{row6}</div>\r\n                <div className=\"row\">{row7}</div>\r\n                <div className=\"row\">{row8}</div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layer;","import React from \"react\";\r\n\r\nclass Tile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let classes = \"\";\r\n        let id = \"\";\r\n        let tile = \"\";\r\n        \r\n        if (this.props.tile === \"empty\") {\r\n            classes = \"empty\";\r\n        // } else if (this.props.tile === \"flower1\" | this.props.tile === \"flower2\" | this.props.tile === \"flower3\" | this.props.tile === \"flower4\") {\r\n        //     classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile + \" \" + this.props.specialPosition;\r\n        //     id = this.props.specialPosition;\r\n        //     tile = \"flower\";\r\n        // } else if (this.props.tile === \"season1\" | this.props.tile === \"season2\" | this.props.tile === \"season3\" | this.props.tile === \"season4\") {\r\n        //     classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile + \" \" + this.props.specialPosition;\r\n        //     id = this.props.specialPosition;\r\n        //     tile = \"season\";\r\n        } else {\r\n            classes = \"tile tile-\" + this.props.graphics + \" \" + this.props.tile + \" \" + this.props.specialPosition;\r\n            id = this.props.specialPosition;\r\n            tile = this.props.tile;\r\n        }\r\n\r\n        return (\r\n            <div id={id} className={classes} data-layer=\"layer5\" data-row={this.props.row} data-index=\"0\" data-tile={tile} onClick={this.props.clicker}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tile;","import React from \"react\";\r\nimport Layer from \"./Layer\";\r\nimport SpecialPositionTile from \"./SpecialPositionTile\";\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let boardClasses = \"board\";\r\n\r\n        // if (!this.props.accessCookie(\"initialize\")) {\r\n        //     boardClasses = \"board display-none\";\r\n        // }\r\n\r\n        return (\r\n            <div id=\"board\" className={boardClasses}>\r\n                <SpecialPositionTile tile={this.props.board.layer5.left[0]} row=\"left\" specialPosition=\"special-position-left\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <Layer layerItems={this.props.board.layer1} layerNumber=\"layer1\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <SpecialPositionTile tile={this.props.board.layer5.right1[0]} row=\"right1\" specialPosition=\"special-position-right1\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <SpecialPositionTile tile={this.props.board.layer5.right2[0]} row=\"right2\" specialPosition=\"special-position-right2\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <Layer layerItems={this.props.board.layer2} layerNumber=\"layer2\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <Layer layerItems={this.props.board.layer3} layerNumber=\"layer3\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <Layer layerItems={this.props.board.layer4} layerNumber=\"layer4\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n                <SpecialPositionTile tile={this.props.board.layer5.top[0]} row=\"top\" specialPosition=\"special-position-top\" clicker={this.props.clicker} graphics={this.props.graphics} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\n\r\nclass StatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let minutes = Math.floor(this.props.time / 60);\r\n\r\n\r\n        let minutes1 = minutes % 10;\r\n        let minutes2 = Math.floor(minutes / 10);\r\n\r\n        if (minutes2 > 5) {\r\n            minutes2 = minutes2 - (6 * Math.floor(minutes2 / 6));\r\n        }\r\n\r\n        let hours = Math.floor(minutes / 60);\r\n        let hours2 = \"\";\r\n\r\n        if (hours > 0) {\r\n            hours2 = hours + \":\";\r\n        }\r\n\r\n        let seconds1 = this.props.time % 10;\r\n        let seconds2 = Math.floor(this.props.time / 10);\r\n\r\n        if (seconds2 > 5) {\r\n            seconds2 = seconds2 - (6 * Math.floor(seconds2 / 6));\r\n        }\r\n\r\n        return (\r\n            <div className=\"status-bar\">\r\n                <div className=\"hud-settings modal-container\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"icon-button\" title=\"Settings\" id=\"button-settings\" data-modalid=\"modal-settings\" onClick={this.props.openModal}>\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"fas fa-cog\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon-button\" title=\"About\" id=\"button-about\" data-modalid=\"modal-about\" onClick={this.props.openModal}>\r\n                            <div className=\"icon-button-content\">\r\n                                ?\r\n                            </div>\r\n                        </div>\r\n                        <a id=\"button-donate\" title=\"Support me on Ko-Fi\" className=\"icon-button\" href='https://ko-fi.com/M4M2XMIW' target='_blank' rel=\"noopener noreferrer\">\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"fas fa-mug-hot\" />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hud-timer modal-container\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"icon-button\" title=\"Time elapsed\" id=\"timer\">\r\n                            <div className=\"icon-button-content\">\r\n                                <span id=\"time\">{hours2}{minutes2}{minutes1}:{seconds2}{seconds1}</span>\r\n                            </div>\r\n                        </span>\r\n                        <span className=\"icon-button\" title=\"Availalbe matches\" id=\"available-matches\">\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"far fa-clone\" />&nbsp;{this.props.matches}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hud-interactions modal-container\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"icon-button\" title=\"Highlight available tiles\" id=\"button-available-tiles\" onClick={this.props.showAvailable}>\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"far fa-eye display-none\" id=\"available-tiles-active\" />\r\n                                <i className=\"far fa-eye-slash\" id=\"available-tiles-inactive\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon-button icon-button-inactive\" title=\"Hint\" id=\"button-hint\" onClick={this.props.hint}>\r\n                            <div className=\"icon-button-cooldown\" id=\"button-hint-cooldown\" />\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"far fa-lightbulb\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"icon-button\" title=\"Shuffle tiles\" id=\"button-shuffle\" onClick={this.props.shuffler}>\r\n                            <div className=\"icon-button-content\">\r\n                                <i className=\"fas fa-random\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"shuffle-pip\" id=\"shuffle-pip-1\"></div>\r\n                        <div className=\"shuffle-pip\" id=\"shuffle-pip-2\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBar;","import React from \"react\";\r\n\r\nclass AboutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"modal-about\" className=\"modal-bg display-none\" data-modalid=\"modal-about\" onClick={this.props.closeButton}>\r\n                <div className=\"modal-container modal-about\" onClick={this.props.stopPropagation}>\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"icon-button modal-close-button\" data-modalid=\"modal-about\" onClick={this.props.closeButton}>\r\n                            <svg enableBackground=\"new 0 0 256 256\" height=\"256px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 256 256\" width=\"256px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M137.051,128l75.475-75.475c2.5-2.5,2.5-6.551,0-9.051s-6.551-2.5-9.051,0L128,118.949L52.525,43.475  c-2.5-2.5-6.551-2.5-9.051,0s-2.5,6.551,0,9.051L118.949,128l-75.475,75.475c-2.5,2.5-2.5,6.551,0,9.051  c1.25,1.25,2.888,1.875,4.525,1.875s3.275-0.625,4.525-1.875L128,137.051l75.475,75.475c1.25,1.25,2.888,1.875,4.525,1.875  s3.275-0.625,4.525-1.875c2.5-2.5,2.5-6.551,0-9.051L137.051,128z\"/></svg>\r\n                        </button>\r\n                        <h2>About</h2>\r\n                        <p>\r\n                            Welcome to Mahjong Space!  This is a sci-fi themed Mahjong Solitaire!\r\n                        </p>\r\n                        <br />\r\n                        <h3>How to Play</h3>\r\n                        <p>\r\n                            The objective of Mahjong Space is to remove tiles by matching them until the board is clear.  Tiles can only be matched if they are open.  Tiles are considered open if they do not have a tile on top of them, and if they can be freely moved left or right without touching another tile.\r\n                        </p>\r\n                        <p>\r\n                            This version of Mahjong Solitaire affords you two shuffles that can be used to shuffle the remaining tiles in place.  You are free to shuffle whenever you wish, but you may want to wait until you run out of matches before doing so.\r\n                        </p>\r\n                        <p>\r\n                            You are also given a hint button, which will reveal one of the available matches.  After using it, the hint button has a 30 second cooldown period where it can't be used.\r\n                        </p>\r\n                        <p>\r\n                            Additonally, you are able to toggle the highlighting of open tiles at any time.\r\n                        </p>\r\n                        <br />\r\n                        <h3>\r\n                            Support\r\n                        </h3>\r\n                        <p>\r\n                            This game is provided for free on the internet.  If you wish to donate to support independent game development, you can buy me a space coffee at <a href=\"https://ko-fi.com/wbrueske\">ko-fi.com/wbrueske.</a>\r\n                        </p>\r\n                        <p>\r\n                            Thanks for playing!  Enjoy!\r\n                        </p>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutModal;","import React from \"react\";\r\n\r\nclass SettingsModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"modal-settings\" className=\"modal-bg display-none\" data-modalid=\"modal-settings\" onClick={this.props.closeButton}>\r\n                <div className=\"modal-container modal-settings\" onClick={this.props.stopPropagation}>\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"icon-button modal-close-button\" data-modalid=\"modal-settings\" onClick={this.props.closeButton}>\r\n                            <svg enableBackground=\"new 0 0 256 256\" height=\"256px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 256 256\" width=\"256px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M137.051,128l75.475-75.475c2.5-2.5,2.5-6.551,0-9.051s-6.551-2.5-9.051,0L128,118.949L52.525,43.475  c-2.5-2.5-6.551-2.5-9.051,0s-2.5,6.551,0,9.051L118.949,128l-75.475,75.475c-2.5,2.5-2.5,6.551,0,9.051  c1.25,1.25,2.888,1.875,4.525,1.875s3.275-0.625,4.525-1.875L128,137.051l75.475,75.475c1.25,1.25,2.888,1.875,4.525,1.875  s3.275-0.625,4.525-1.875c2.5-2.5,2.5-6.551,0-9.051L137.051,128z\"/></svg>\r\n                        </button>\r\n                        <h2>Settings</h2>\r\n                        <hr />\r\n                        <form>\r\n                            <h3>Graphics:</h3>\r\n                            <input type=\"radio\" id=\"graphics-ultra\" name=\"graphics\" value=\"ultra\" /><label htmlFor=\"graphics-ultra\">Ultra</label>\r\n                            <br />\r\n                            <input type=\"radio\" id=\"graphics-veryhigh\" name=\"graphics\" value=\"veryhigh\" /><label htmlFor=\"graphics-veryhigh\">Very High</label>\r\n                            <br />\r\n                            <input type=\"radio\" id=\"graphics-high\" name=\"graphics\" value=\"high\" defaultChecked /><label htmlFor=\"graphics-high\">High</label>\r\n                            <br />\r\n                            <input type=\"radio\" id=\"graphics-medium\" name=\"graphics\" value=\"medium\" /><label htmlFor=\"graphics-medium\">Medium</label>\r\n                            <br />\r\n                            <input type=\"radio\" id=\"graphics-low\" name=\"graphics\" value=\"low\" /><label htmlFor=\"graphics-low\">Low</label>\r\n                            <br />\r\n                            <sub>Higher graphics will use more data if you are playing on a mobile device.</sub>\r\n                            <br />\r\n                            <br />\r\n\r\n                            {/* <hr />\r\n\r\n                            <h3>Cookies</h3>\r\n                            <input type=\"checkbox\" id=\"accept-cookies\" name=\"cookies\" /><label htmlFor=\"accept-cookies\">Accept cookies</label>\r\n                            <br />\r\n                            <sub>Cookies are used to save your graphics settings.</sub>\r\n                            <br />\r\n                            <br />\r\n                            <hr />\r\n                            <br /> */}\r\n\r\n                            <input type=\"submit\" value=\"Apply\" className=\"button\" data-modalid=\"modal-settings\" onClick={this.props.setSettings} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsModal;","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport StatusBar from \"./StatusBar\";\r\nimport AboutModal from \"./AboutModal\";\r\nimport SettingsModal from \"./SettingsModal\";\r\nimport IntroModal from \"./IntroModal\";\r\n\r\nconst tileTypes = [\r\n    \"dot1\", \"dot2\", \"dot3\", \"dot4\", \"dot5\", \"dot6\", \"dot7\", \"dot8\", \"dot9\",\r\n    \"bamboo1\", \"bamboo2\", \"bamboo3\", \"bamboo4\", \"bamboo5\", \"bamboo6\", \"bamboo7\", \"bamboo8\", \"bamboo9\",\r\n    \"character1\", \"character2\", \"character3\", \"character4\", \"character5\", \"character6\", \"character7\", \"character8\", \"character9\",\r\n    \"wind1\", \"wind2\", \"wind3\", \"wind4\",\r\n    \"dragon1\", \"dragon2\", \"dragon3\",\r\n    \"flower1\", \"flower2\", \"flower3\", \"flower4\",\r\n    \"season1\", \"season2\", \"season3\", \"season4\"\r\n];\r\n\r\nconst tileset = [\r\n    // Copy 1\r\n    \"dot1\", \"dot2\", \"dot3\", \"dot4\", \"dot5\", \"dot6\", \"dot7\", \"dot8\", \"dot9\",\r\n    \"bamboo1\", \"bamboo2\", \"bamboo3\", \"bamboo4\", \"bamboo5\", \"bamboo6\", \"bamboo7\", \"bamboo8\", \"bamboo9\",\r\n    \"character1\", \"character2\", \"character3\", \"character4\", \"character5\", \"character6\", \"character7\", \"character8\", \"character9\",\r\n    \"wind1\", \"wind2\", \"wind3\", \"wind4\",\r\n    \"dragon1\", \"dragon2\", \"dragon3\",\r\n    // Copy 2\r\n    \"dot1\", \"dot2\", \"dot3\", \"dot4\", \"dot5\", \"dot6\", \"dot7\", \"dot8\", \"dot9\",\r\n    \"bamboo1\", \"bamboo2\", \"bamboo3\", \"bamboo4\", \"bamboo5\", \"bamboo6\", \"bamboo7\", \"bamboo8\", \"bamboo9\",\r\n    \"character1\", \"character2\", \"character3\", \"character4\", \"character5\", \"character6\", \"character7\", \"character8\", \"character9\",\r\n    \"wind1\", \"wind2\", \"wind3\", \"wind4\",\r\n    \"dragon1\", \"dragon2\", \"dragon3\",\r\n    // Copy 3\r\n    \"dot1\", \"dot2\", \"dot3\", \"dot4\", \"dot5\", \"dot6\", \"dot7\", \"dot8\", \"dot9\",\r\n    \"bamboo1\", \"bamboo2\", \"bamboo3\", \"bamboo4\", \"bamboo5\", \"bamboo6\", \"bamboo7\", \"bamboo8\", \"bamboo9\",\r\n    \"character1\", \"character2\", \"character3\", \"character4\", \"character5\", \"character6\", \"character7\", \"character8\", \"character9\",\r\n    \"wind1\", \"wind2\", \"wind3\", \"wind4\",\r\n    \"dragon1\", \"dragon2\", \"dragon3\",\r\n    // Copy 4\r\n    \"dot1\", \"dot2\", \"dot3\", \"dot4\", \"dot5\", \"dot6\", \"dot7\", \"dot8\", \"dot9\",\r\n    \"bamboo1\", \"bamboo2\", \"bamboo3\", \"bamboo4\", \"bamboo5\", \"bamboo6\", \"bamboo7\", \"bamboo8\", \"bamboo9\",\r\n    \"character1\", \"character2\", \"character3\", \"character4\", \"character5\", \"character6\", \"character7\", \"character8\", \"character9\",\r\n    \"wind1\", \"wind2\", \"wind3\", \"wind4\",\r\n    \"dragon1\", \"dragon2\", \"dragon3\",\r\n    // Bonus\r\n    \"flower1\", \"flower2\", \"flower3\", \"flower4\",\r\n    \"season1\", \"season2\", \"season3\", \"season4\"\r\n];\r\n\r\n// const expiredCookieDate = \"Sun, 20 Jul 1969 20:17:00 UTC\";\r\n\r\nclass Mahjong extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            board: {\r\n                layer1: {\r\n                    row1: [], row2: [], row3: [], row4: [], row5: [], row6: [], row7: [], row8: []\r\n                },\r\n                layer2: {\r\n                    row1: [], row2: [], row3: [], row4: [], row5: [], row6: [], row7: [], row8: []\r\n                },\r\n                layer3: {\r\n                    row1: [], row2: [], row3: [], row4: [], row5: [], row6: [], row7: [], row8: []\r\n                },\r\n                layer4: {\r\n                    row1: [], row2: [], row3: [], row4: [], row5: [], row6: [], row7: [], row8: []\r\n                },\r\n                layer5: {\r\n                    left: [], top: [], right1: [], right2: []\r\n                },\r\n            },\r\n            matches: 0,\r\n            matchesElements: [],\r\n            remainingShuffles: 2,\r\n            showAvailable: false,\r\n            hint: null,\r\n            hintTimer: 0,\r\n            secondsElapsed: 0,\r\n            settings: {\r\n                graphics: \"high\",\r\n                audio: false,\r\n                acceptCookies: false\r\n            }\r\n        }\r\n\r\n        this.initialShuffle = this.initialShuffle.bind(this);\r\n        this.distributeTiles = this.distributeTiles.bind(this);\r\n        this.createRow = this.createRow.bind(this);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.checkMatch = this.checkMatch.bind(this);\r\n        this.setEmpty = this.setEmpty.bind(this);\r\n\r\n        this.setSelection = this.setSelection.bind(this);\r\n        this.clearSelection = this.clearSelection.bind(this);\r\n        this.clearHint = this.clearHint.bind(this);\r\n\r\n        this.toggleShowAvailable = this.toggleShowAvailable.bind(this);\r\n        this.getAvailableTiles = this.getAvailableTiles.bind(this);\r\n        this.checkTileAvailability = this.checkTileAvailability.bind(this);\r\n\r\n        this.shuffleTiles = this.shuffleTiles.bind(this);\r\n        this.getHint = this.getHint.bind(this);\r\n\r\n        this.setSettings = this.setSettings.bind(this);\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n\r\n        this.closeSettings = this.closeSettings.bind(this);\r\n\r\n        this.stopPropagationFunction = this.stopPropagationFunction.bind(this);\r\n\r\n        this.accessCookie = this.accessCookie.bind(this);\r\n    }\r\n\r\n\r\n\r\n    initialShuffle(tileset) {\r\n        let newTileset = [...tileset];\r\n        let shuffledTileset = [];\r\n\r\n        for (let i = 0; i < tileset.length; i++) {\r\n            let randomTile = newTileset.splice(Math.floor(Math.random() * newTileset.length), 1);\r\n            shuffledTileset.push(randomTile[0]);\r\n        }\r\n\r\n        return shuffledTileset;\r\n    }\r\n\r\n    distributeTiles(tileset) {\r\n        this.setState(\r\n            {\r\n                board: {\r\n                    layer1: {\r\n                        row1: this.createRow(tileset, 12, 1),\r\n                        row2: this.createRow(tileset, 8, 3),\r\n                        row3: this.createRow(tileset, 10, 2),\r\n                        row4: this.createRow(tileset, 12, 1),\r\n                        row5: this.createRow(tileset, 12, 1),\r\n                        row6: this.createRow(tileset, 10, 2),\r\n                        row7: this.createRow(tileset, 8, 3),\r\n                        row8: this.createRow(tileset, 12, 1)\r\n                    },\r\n                    layer2: {\r\n                        row1: this.createRow(tileset, 0, 7),\r\n                        row2: this.createRow(tileset, 6, 4),\r\n                        row3: this.createRow(tileset, 6, 4),\r\n                        row4: this.createRow(tileset, 6, 4),\r\n                        row5: this.createRow(tileset, 6, 4),\r\n                        row6: this.createRow(tileset, 6, 4),\r\n                        row7: this.createRow(tileset, 6, 4),\r\n                        row8: this.createRow(tileset, 0, 7)\r\n                    },\r\n                    layer3: {\r\n                        row1: this.createRow(tileset, 0, 7),\r\n                        row2: this.createRow(tileset, 0, 7),\r\n                        row3: this.createRow(tileset, 4, 5),\r\n                        row4: this.createRow(tileset, 4, 5),\r\n                        row5: this.createRow(tileset, 4, 5),\r\n                        row6: this.createRow(tileset, 4, 5),\r\n                        row7: this.createRow(tileset, 0, 7),\r\n                        row8: this.createRow(tileset, 0, 7),\r\n                    },\r\n                    layer4: {\r\n                        row1: this.createRow(tileset, 0, 7),\r\n                        row2: this.createRow(tileset, 0, 7),\r\n                        row3: this.createRow(tileset, 0, 7),\r\n                        row4: this.createRow(tileset, 2, 6),\r\n                        row5: this.createRow(tileset, 2, 6),\r\n                        row6: this.createRow(tileset, 0, 7),\r\n                        row7: this.createRow(tileset, 0, 7),\r\n                        row8: this.createRow(tileset, 0, 7),\r\n                    },\r\n                    layer5: {\r\n                        left: tileset.splice(0, 1),\r\n                        top: tileset.splice(0, 1),\r\n                        right1: tileset.splice(0, 1),\r\n                        right2: tileset.splice(0, 1)\r\n                    }\r\n                }\r\n            },\r\n            \r\n            // Initialize the number of available matches after tiles have been distributed.\r\n            () => this.getAvailableTiles()\r\n        );\r\n\r\n    }\r\n\r\n\r\n    createRow(tileset, rowLength, emptyLength) {\r\n        let row = tileset.splice(0, rowLength);\r\n        for (let i = 0; i < emptyLength; i++) {\r\n            row.unshift(\"empty\");\r\n            row.push(\"empty\");\r\n        }\r\n        return row;\r\n    }\r\n\r\n \r\n    handleClick(event) {\r\n        event.stopPropagation();\r\n\r\n        if (this.checkTileAvailability(event.target)) {\r\n\r\n            if (this.state.hint === null) {\r\n                this.checkMatch(event) ? this.setEmpty(event, this.state): this.setSelection(event);\r\n\r\n            } else if (event.target === this.state.hint[0] || event.target === this.state.hint[1]) {\r\n\r\n                // See if the currently selected tile is the same as the hinted tile.\r\n                // Matches the currently selected tile if they're the same.\r\n                if (this.state.currentSelection) {\r\n                    if (this.state.currentSelection.tile === event.target.dataset.tile) {\r\n                        this.checkMatch(event) ? this.setEmpty(event, this.state): this.setSelection(event);\r\n                        this.clearHint();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                let newState = this.state;\r\n\r\n                newState.board[newState.hint[0].dataset.layer][newState.hint[0].dataset.row][newState.hint[0].dataset.index] = \"empty\";\r\n                newState.board[newState.hint[1].dataset.layer][newState.hint[1].dataset.row][newState.hint[1].dataset.index] = \"empty\";\r\n\r\n                newState.hint[0].className = \"empty\";\r\n                newState.hint[1].className = \"empty\";\r\n\r\n                newState.hint = null;\r\n\r\n                this.setState(newState, () => {\r\n                    this.clearSelection();\r\n                    this.getAvailableTiles();\r\n                });\r\n\r\n                \r\n\r\n            } else {\r\n                this.checkMatch(event) ? this.setEmpty(event, this.state): this.setSelection(event);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    checkMatch(event) {\r\n        if (this.state.currentSelection) {\r\n\r\n            if (this.state.currentSelection.layer === event.target.dataset.layer \r\n                && this.state.currentSelection.row === event.target.dataset.row\r\n                && this.state.currentSelection.index === event.target.dataset.index) {\r\n                    // this.clearSelection();\r\n                    return false;\r\n\r\n            } else if (event.target.dataset.tile === this.state.currentSelection.tile && event.target.id !== this.state.currentSelection.id) {\r\n\r\n                // this.setEmpty(event, this.state);\r\n                return true;\r\n\r\n            } else if (event.target.dataset.tile === \"flower1\" || \r\n                        event.target.dataset.tile === \"flower2\" || \r\n                        event.target.dataset.tile === \"flower3\" || \r\n                        event.target.dataset.tile === \"flower4\") {\r\n                if (this.state.currentSelection.tile === \"flower1\" || \r\n                    this.state.currentSelection.tile === \"flower2\" || \r\n                    this.state.currentSelection.tile === \"flower3\" || \r\n                    this.state.currentSelection.tile === \"flower4\") {\r\n\r\n                        // this.setEmpty(event, this.state);\r\n                        return true;\r\n        \r\n                } else {\r\n                    // this.setSelection(event);\r\n                    return false;\r\n                }\r\n\r\n            } else if (event.target.dataset.tile === \"season1\" || \r\n                        event.target.dataset.tile === \"season2\" || \r\n                        event.target.dataset.tile === \"season3\" || \r\n                        event.target.dataset.tile === \"season4\") {\r\n                if (this.state.currentSelection.tile === \"season1\" || \r\n                    this.state.currentSelection.tile === \"season2\" || \r\n                    this.state.currentSelection.tile === \"season3\" || \r\n                    this.state.currentSelection.tile === \"season4\") {\r\n\r\n                        // this.setEmpty(event, this.state);\r\n                        return true;\r\n\r\n                } else {\r\n                    // this.setSelection(event);\r\n                    return false;\r\n                }\r\n\r\n            } else {\r\n                // this.setSelection(event);\r\n                return false;\r\n            }\r\n\r\n        } else {\r\n            // this.setSelection(event);\r\n            return false;\r\n        }\r\n\r\n        // this.getAvailableTiles();\r\n    }\r\n\r\n    setSelection(event) {\r\n        if (this.state.currentSelection) {\r\n            this.clearSelection();\r\n            if (this.state.currentSelection.layer === event.target.dataset.layer \r\n                && this.state.currentSelection.row === event.target.dataset.row\r\n                && this.state.currentSelection.index === event.target.dataset.index) {\r\n                    return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            currentSelection: {\r\n                id: event.target.id,\r\n                layer: event.target.dataset.layer,\r\n                row: event.target.dataset.row,\r\n                index: event.target.dataset.index,\r\n                tile: event.target.dataset.tile\r\n            }\r\n        });\r\n\r\n        event.target.classList.add(\"tile-selected\");\r\n    }\r\n\r\n    setEmpty(event, state) {\r\n\r\n        event.target.className = \"empty\";\r\n        document.getElementById(this.state.currentSelection.id).className = \"empty\";\r\n\r\n        let newState = state;\r\n\r\n        newState.board[event.target.dataset.layer][event.target.dataset.row][event.target.dataset.index] = \"empty\";\r\n        newState.board[this.state.currentSelection.layer][this.state.currentSelection.row][this.state.currentSelection.index] = \"empty\";\r\n\r\n        newState.currentSelection = null;\r\n\r\n        this.setState(newState);\r\n        \r\n        this.getAvailableTiles();\r\n    }\r\n\r\n    clearSelection() {\r\n        let tilesArr = document.querySelectorAll(\".tile\");\r\n        tilesArr.forEach(tile => tile.classList.remove(\"tile-selected\"));\r\n\r\n        this.setState({\r\n            currentSelection: null\r\n        });\r\n    }\r\n\r\n    clearHint() {\r\n        let tilesArr = document.querySelectorAll(\".tile\");\r\n        tilesArr.forEach(tile => tile.classList.remove(\"tile-hint\"));\r\n\r\n        this.setState({\r\n            currentSelection: null,\r\n            hint: null\r\n        });\r\n    }\r\n\r\n    toggleShowAvailable() {\r\n        if (this.state.showAvailable) {\r\n            document.getElementById(\"available-tiles-active\").classList.add(\"display-none\");\r\n            document.getElementById(\"available-tiles-inactive\").classList.remove(\"display-none\");\r\n            this.setState(\r\n                {\r\n                    showAvailable: false\r\n                },\r\n                \r\n                () => this.getAvailableTiles()\r\n            );\r\n        } else {\r\n            document.getElementById(\"available-tiles-active\").classList.remove(\"display-none\");\r\n            document.getElementById(\"available-tiles-inactive\").classList.add(\"display-none\");\r\n            this.setState(\r\n                {\r\n                    showAvailable: true\r\n                },\r\n                \r\n                () => this.getAvailableTiles()\r\n            );\r\n        }\r\n    }\r\n\r\n    getAvailableTiles() {\r\n        let currentTiles = document.querySelectorAll(\".tile\");\r\n        let availableTiles = [];\r\n        let availableTilesElements = [];\r\n        let numMatches = 0;\r\n        // console.log(currentTiles[0].dataset);\r\n        \r\n        currentTiles.forEach(tile => {\r\n            if (this.checkTileAvailability(tile)) {\r\n                availableTiles.push(tile);\r\n                tile.classList.remove(\"tile-dim\");\r\n            } else {\r\n                if (this.state.showAvailable) {\r\n                    tile.classList.add(\"tile-dim\");\r\n                } else {\r\n                    tile.classList.remove(\"tile-dim\");\r\n                }\r\n            }\r\n        });\r\n        // console.log(availableTiles);\r\n\r\n        for (let i = 0; i < availableTiles.length; i++) {\r\n            for (let v = i + 1; v < availableTiles.length; v++) {\r\n                // Logic for bonus tiles\r\n                if (availableTiles[i].dataset.tile === \"flower1\" ||\r\n                    availableTiles[i].dataset.tile === \"flower2\" ||\r\n                    availableTiles[i].dataset.tile === \"flower3\" ||\r\n                    availableTiles[i].dataset.tile === \"flower4\") {\r\n                        if (availableTiles[v].dataset.tile === \"flower1\" ||\r\n                            availableTiles[v].dataset.tile === \"flower2\" ||\r\n                            availableTiles[v].dataset.tile === \"flower3\" ||\r\n                            availableTiles[v].dataset.tile === \"flower4\") {\r\n                                numMatches += 1;\r\n                                availableTilesElements.push([availableTiles[i], availableTiles[v]]);\r\n                        }\r\n                } else if (availableTiles[i].dataset.tile === \"season1\" ||\r\n                            availableTiles[i].dataset.tile === \"season2\" ||\r\n                            availableTiles[i].dataset.tile === \"season3\" ||\r\n                            availableTiles[i].dataset.tile === \"season4\") {\r\n                                if (availableTiles[v].dataset.tile === \"season1\" ||\r\n                                    availableTiles[v].dataset.tile === \"season2\" ||\r\n                                    availableTiles[v].dataset.tile === \"season3\" ||\r\n                                    availableTiles[v].dataset.tile === \"season4\") {\r\n                                        numMatches += 1;\r\n                                        availableTilesElements.push([availableTiles[i], availableTiles[v]]);\r\n                                }\r\n                // Logic for other tiles\r\n                } else if (availableTiles[i].dataset.tile === availableTiles[v].dataset.tile) {\r\n                    numMatches += 1;\r\n                    availableTilesElements.push([availableTiles[i], availableTiles[v]]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(numMatches);\r\n        this.setState({\r\n            matches: numMatches,\r\n            matchesElements: availableTilesElements\r\n        });\r\n\r\n        if (numMatches === 0) {\r\n            currentTiles.forEach(tile => tile.classList.add(\"tile-inactive\"));\r\n        }\r\n    }\r\n\r\n    checkTileAvailability(tile) {\r\n        let layer = tile.dataset.layer;\r\n        let row = tile.dataset.row;\r\n        let index = tile.dataset.index;\r\n\r\n        if (layer === \"layer4\") {\r\n            if (this.state.board.layer5.top[0] === \"empty\") {\r\n                // console.log(\"available\");\r\n                return true;\r\n            } else {\r\n                // console.log(\"unavailable - top tile still in place\");\r\n                return false;\r\n            }\r\n        } else if (layer !== \"layer5\") {\r\n            let layerAbove = \"layer\" + (parseInt(layer.split(\"\").splice(5, 1)) + 1);\r\n\r\n            // Make sure the tile above is empty.\r\n            if (this.state.board[layerAbove][row][index] === \"empty\") {\r\n                // console.log(\"tile above is empty\");\r\n                // Make sure that the tile is clear on the left or right side.\r\n                if (this.state.board[layer][row][parseInt(index) - 1] === \"empty\" || this.state.board[layer][row][parseInt(index) + 1] === \"empty\") {\r\n\r\n                    if (layer === \"layer1\") {\r\n                        if (row === \"row4\" || row === \"row5\") {\r\n                            if (parseInt(index) === 1 && this.state.board.layer5.left[0] !== \"empty\") {\r\n                                // console.log(\"available\");\r\n                                return false;\r\n                            } else if (parseInt(index) === 12 && this.state.board.layer5.right1[0] !== \"empty\") {\r\n                                // console.log(\"available\");\r\n                                return false;\r\n                            } else {\r\n                                // console.log(\"unavailable - side tile(s) still in place\");\r\n                                // console.log(\"index: \" + index);\r\n                                return true;\r\n                            }\r\n                        } else {\r\n                            // console.log(\"available\");\r\n                            return true;\r\n                        }\r\n                    } else {\r\n                        // console.log(\"available\");\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    // console.log(\"unavailable - tile is not clear on one or both sides\");\r\n                    return false;\r\n                }\r\n            } else {\r\n                // console.log(\"unavailable - there is a tile above this tile\");\r\n                return false;\r\n            }\r\n\r\n        } else if (layer === \"layer5\") {\r\n            if (row === \"right1\") {\r\n                // console.log(\"right1\");\r\n                if (this.state.board.layer5.right2[0] === \"empty\") {\r\n                    // console.log(\"available\");\r\n                    return true;\r\n                } else {\r\n                    // console.log(\"unavailable - rightmost tile still in play\");\r\n                    return false;\r\n                }\r\n            } else {\r\n                // console.log(\"available\");\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    shuffleTiles() {\r\n        if (this.state.remainingShuffles > 0) {\r\n\r\n            if (this.state.remainingShuffles === 2) {\r\n                document.getElementById(\"shuffle-pip-2\").classList.add(\"icon-button-inactive\");\r\n            } else if (this.state.remainingShuffles === 1) {\r\n                document.getElementById(\"shuffle-pip-1\").classList.add(\"icon-button-inactive\");\r\n                document.getElementById(\"button-shuffle\").classList.add(\"icon-button-inactive\");\r\n                document.getElementById(\"button-shuffle\").setAttribute(\"title\", \"No shuffles remaining\");\r\n            }\r\n\r\n            let newState = this.state;\r\n\r\n            let currentTiles = document.querySelectorAll(\".tile\");\r\n            let tilesArray = [];\r\n\r\n            currentTiles.forEach(tile => {\r\n                tilesArray.push(tile.dataset.tile);\r\n                tile.classList.remove(...tileTypes, \"tile-selected\", \"tile-inactive\");\r\n                tile.dataset.tile = \"\";\r\n            });\r\n\r\n            currentTiles.forEach(tile => {\r\n                let randomTile = tilesArray.splice(Math.floor(Math.random() * tilesArray.length), 1);\r\n                tile.classList.add(randomTile[0]);\r\n                tile.dataset.tile = randomTile[0];\r\n\r\n                newState.board[tile.dataset.layer][tile.dataset.row][tile.dataset.index] = tile.dataset.tile;\r\n            });\r\n\r\n            newState.currentSelection = null;\r\n\r\n            newState.remainingShuffles--;\r\n\r\n            this.setState(newState, () => this.getAvailableTiles());\r\n            this.clearHint();\r\n        }\r\n    }\r\n\r\n    getHint() {\r\n        if (this.state.hint === null) {\r\n            if (this.state.hintTimer > 30) {\r\n                this.clearSelection();\r\n                let hint = this.state.matchesElements[Math.floor(Math.random() * this.state.matchesElements.length)];\r\n                hint.forEach(tile => {\r\n                    tile.classList.add(\"tile-hint\");\r\n                });\r\n\r\n                this.setState({\r\n                    hint: hint,\r\n                    hintTimer: 0\r\n                });\r\n\r\n                document.getElementById(\"button-hint\").classList.add(\"icon-button-inactive\");\r\n                document.getElementById(\"button-hint-cooldown\").classList.remove(\"display-none\");\r\n            }\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        this.setState(state => ({\r\n            secondsElapsed: state.secondsElapsed + 1,\r\n            hintTimer: state.hintTimer + 1\r\n        }));\r\n\r\n        if (this.state.hintTimer === 30) {\r\n            document.getElementById(\"button-hint\").classList.remove(\"icon-button-inactive\");\r\n            document.getElementById(\"button-hint-cooldown\").classList.add(\"display-none\");\r\n            document.getElementById(\"button-hint-cooldown\").style.height = 0;\r\n        } else if (this.state.hintTimer < 30) {\r\n            let height = this.state.hintTimer * 100 / 30;\r\n            document.getElementById(\"button-hint-cooldown\").style.height = height + \"%\";\r\n        }\r\n    }\r\n\r\n    openModal(event) {\r\n        document.getElementById(event.target.dataset.modalid).classList.remove(\"display-none\");\r\n    }\r\n\r\n    closeModal(event) {\r\n        document.getElementById(event.target.dataset.modalid).classList.add(\"display-none\");\r\n    }\r\n\r\n    closeSettings(event) {\r\n        let graphics = document.getElementsByName(\"graphics\");\r\n\r\n        for (let i = 0; i < graphics.length; i++) {\r\n            if (graphics[i].value === this.state.settings.graphics) {\r\n                graphics[i].checked = true;\r\n            }\r\n        }\r\n\r\n        // if (this.state.settings.acceptCookies) {\r\n        //     document.getElementById(\"accept-cookies\").checked = true;\r\n        // } else {\r\n        //     document.getElementById(\"accept-cookies\").checked = false;\r\n        // }\r\n\r\n        document.getElementById(event.target.dataset.modalid).classList.add(\"display-none\");\r\n    }\r\n\r\n    setSettings(event) {\r\n        event.preventDefault();\r\n        let newState = this.state;\r\n        let graphics = document.getElementsByName(\"graphics\");\r\n\r\n        for (let i = 0; i < graphics.length; i++) {\r\n            if (graphics[i].checked) {\r\n                newState.settings.graphics = graphics[i].value;\r\n            }\r\n        }\r\n\r\n        // newState.settings.acceptCookies = document.getElementById(\"accept-cookies\").checked;\r\n        this.setState(newState);\r\n        this.closeModal(event);\r\n    }\r\n\r\n    stopPropagationFunction(event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    // Cookies\r\n    accessCookie(cookieName) {\r\n        let cookieNameEq = cookieName + \"=\";\r\n        let cookiesArray = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookiesArray.length; i++) {\r\n            let tempCookie = cookiesArray[i].trim();\r\n            if (tempCookie.indexOf(cookieNameEq) === 0) {\r\n                return tempCookie.substring(cookieNameEq.length, tempCookie.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n        // if (this.accessCookie(\"initialize\")) {\r\n            let shuffledTileset = this.initialShuffle(tileset);\r\n            this.distributeTiles(shuffledTileset);\r\n            this.interval = setInterval(() => this.tick(), 1000);\r\n        // }\r\n    }\r\n   \r\n    render() {\r\n        let bgClasses;\r\n\r\n        if (this.state.settings.graphics === \"low\") {\r\n            bgClasses = \"background bg-low\";\r\n        } else if (this.state.settings.graphics === \"medium\" || this.state.settings.graphics === \"high\") {\r\n            bgClasses = \"background bg-medium\";\r\n        } else if (this.state.settings.graphics === \"veryhigh\" || this.state.settings.graphics === \"ultra\") {\r\n            bgClasses = \"background bg-high\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className={bgClasses} />\r\n                <div className=\"board-viewport\" onClick={this.clearSelection} >\r\n                    <div className=\"board-wrapper\">\r\n                        <Board board={this.state.board} clicker={this.handleClick} graphics={this.state.settings.graphics} accessCookie={this.accessCookie} />\r\n                    </div>\r\n                </div>\r\n                <StatusBar matches={this.state.matches} showAvailable={this.toggleShowAvailable} shuffler={this.shuffleTiles} hint={this.getHint} time={this.state.secondsElapsed} openModal={this.openModal} />\r\n                <AboutModal closeButton={this.closeModal} stopPropagation={this.stopPropagationFunction} />\r\n                <SettingsModal closeButton={this.closeSettings} stopPropagation={this.stopPropagationFunction} setSettings={this.setSettings} />\r\n                {/* <IntroModal closeButton={this.closeSettings} stopPropagation={this.stopPropagationFunction} accessCookie={this.accessCookie} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mahjong;","import React from \"react\";\r\n\r\nclass IntroModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let modalClasses = \"modal-bg\";\r\n\r\n        if (this.props.accessCookie(\"initialize\")) {\r\n            modalClasses = \"modal-bg display-none\";\r\n        }\r\n\r\n\r\n        return (\r\n            <div id=\"modal-intro\" className={modalClasses} data-modalid=\"modal-intro\" onClick={this.props.closeButton}>\r\n                <div className=\"modal-container modal-intro\" onClick={this.props.stopPropagation}>\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"icon-button modal-close-button\" data-modalid=\"modal-intro\" onClick={this.props.closeButton}>\r\n                            <svg enableBackground=\"new 0 0 256 256\" height=\"256px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 256 256\" width=\"256px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M137.051,128l75.475-75.475c2.5-2.5,2.5-6.551,0-9.051s-6.551-2.5-9.051,0L128,118.949L52.525,43.475  c-2.5-2.5-6.551-2.5-9.051,0s-2.5,6.551,0,9.051L118.949,128l-75.475,75.475c-2.5,2.5-2.5,6.551,0,9.051  c1.25,1.25,2.888,1.875,4.525,1.875s3.275-0.625,4.525-1.875L128,137.051l75.475,75.475c1.25,1.25,2.888,1.875,4.525,1.875  s3.275-0.625,4.525-1.875c2.5-2.5,2.5-6.551,0-9.051L137.051,128z\"/></svg>\r\n                        </button>\r\n                        <h2>Mahjong Space</h2>\r\n                        <p>\r\n                            Welcome to Mahjong Space!  This is a sci-fi themed Mahjong Solitaire!\r\n                        </p>\r\n                        <br />\r\n                        <h3>How to Play</h3>\r\n                        <p>\r\n                            The objective of Mahjong Space is to remove tiles by matching them until the board is clear.  Tiles can only be matched if they are open.  Tiles are considered open if they do not have a tile on top of them, and if they can be freely moved left or right without touching another tile.\r\n                        </p>\r\n                        <p>\r\n                            This version of Mahjong Solitaire affords you two shuffles that can be used to shuffle the remaining tiles in place.  You are free to shuffle whenever you wish, but you may want to wait until you run out of matches before doing so.\r\n                        </p>\r\n                        <p>\r\n                            You are also given a hint button, which will reveal one of the available matches.  After using it, the hint button has a 30 second cooldown period where it can't be used.\r\n                        </p>\r\n                        <p>\r\n                            Additonally, you are able to toggle the highlighting of open tiles at any time.\r\n                        </p>\r\n                        <br />\r\n                        <h3>\r\n                            Support\r\n                        </h3>\r\n                        <p>\r\n                            This game is provided for free on the internet.  If you wish to donate to support independent game development, you can buy me a space coffee at <a href=\"https://ko-fi.com/wbrueske\">ko-fi.com/wbrueske.</a>\r\n                        </p>\r\n                        <p>\r\n                            Thanks for playing!  Enjoy!\r\n                        </p>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IntroModal;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./style/style.scss\";\nimport Mahjong from './components/Mahjong';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Mahjong />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}